# schema.graphql

type Query {
  pullRequestById(id: ID!): PullRequest
  pullRequests(filters: PullRequestFilter): [PullRequest]
  commentsByPullRequest(pullRequestId: ID!): [Comment]
}

type Mutation {
  createPullRequest(input: CreatePullRequestInput!): PullRequest
  addCommentToPullRequest(input: AddCommentInput!): Comment
  addReactionToComment(input: AddReactionInput!): Comment
  mergePullRequest(id: ID!): PullRequest
  rejectPullRequest(id: ID!): PullRequest
}

type PullRequest {
  id: ID!
  title: String!
  description: String!
  sourceCommit: String!
  targetBranch: String!
  status: String!
  user: User!
  comments: [Comment]
  fileChanges: [FileChange]
}

type Comment {
  id: ID!
  content: String!
  lineNumber: Int
  reactions: [String]
  pullRequestId: ID!
}


# Confirm if this is needed
type User {
  id: ID!
  name: String!
  email: String!
}

type FileChange {
  id: ID!
  fileName: String!
  changes: String!
}

input PullRequestFilter {
  status: String
}

input CreatePullRequestInput {
  title: String!
  description: String!
  sourceCommit: String!
  targetBranch: String!
}

input AddCommentInput {
  pullRequestId: ID!
  content: String!
  lineNumber: Int
}

input AddReactionInput {
  commentId: ID!
  reaction: String!
}
